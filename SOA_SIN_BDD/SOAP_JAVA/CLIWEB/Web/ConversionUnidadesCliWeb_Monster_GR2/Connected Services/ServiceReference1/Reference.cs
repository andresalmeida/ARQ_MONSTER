//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceReference1
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://controlador.monster.edu.ec/", ConfigurationName="ServiceReference1.ConversionUnidades")]
    public interface ConversionUnidades
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://controlador.monster.edu.ec/ConversionUnidades/pulgadasACentimetrosRequest", ReplyAction="http://controlador.monster.edu.ec/ConversionUnidades/pulgadasACentimetrosResponse" +
            "")]
        ServiceReference1.pulgadasACentimetrosResponse pulgadasACentimetros(ServiceReference1.pulgadasACentimetrosRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://controlador.monster.edu.ec/ConversionUnidades/pulgadasACentimetrosRequest", ReplyAction="http://controlador.monster.edu.ec/ConversionUnidades/pulgadasACentimetrosResponse" +
            "")]
        System.Threading.Tasks.Task<ServiceReference1.pulgadasACentimetrosResponse> pulgadasACentimetrosAsync(ServiceReference1.pulgadasACentimetrosRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://controlador.monster.edu.ec/ConversionUnidades/centimetrosAPulgadasRequest", ReplyAction="http://controlador.monster.edu.ec/ConversionUnidades/centimetrosAPulgadasResponse" +
            "")]
        ServiceReference1.centimetrosAPulgadasResponse centimetrosAPulgadas(ServiceReference1.centimetrosAPulgadasRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://controlador.monster.edu.ec/ConversionUnidades/centimetrosAPulgadasRequest", ReplyAction="http://controlador.monster.edu.ec/ConversionUnidades/centimetrosAPulgadasResponse" +
            "")]
        System.Threading.Tasks.Task<ServiceReference1.centimetrosAPulgadasResponse> centimetrosAPulgadasAsync(ServiceReference1.centimetrosAPulgadasRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="pulgadasACentimetros", WrapperNamespace="http://controlador.monster.edu.ec/", IsWrapped=true)]
    public partial class pulgadasACentimetrosRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public double pulgadas;
        
        public pulgadasACentimetrosRequest()
        {
        }
        
        public pulgadasACentimetrosRequest(double pulgadas)
        {
            this.pulgadas = pulgadas;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="pulgadasACentimetrosResponse", WrapperNamespace="http://controlador.monster.edu.ec/", IsWrapped=true)]
    public partial class pulgadasACentimetrosResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public double @return;
        
        public pulgadasACentimetrosResponse()
        {
        }
        
        public pulgadasACentimetrosResponse(double @return)
        {
            this.@return = @return;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="centimetrosAPulgadas", WrapperNamespace="http://controlador.monster.edu.ec/", IsWrapped=true)]
    public partial class centimetrosAPulgadasRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public double centimetros;
        
        public centimetrosAPulgadasRequest()
        {
        }
        
        public centimetrosAPulgadasRequest(double centimetros)
        {
            this.centimetros = centimetros;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="centimetrosAPulgadasResponse", WrapperNamespace="http://controlador.monster.edu.ec/", IsWrapped=true)]
    public partial class centimetrosAPulgadasResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public double @return;
        
        public centimetrosAPulgadasResponse()
        {
        }
        
        public centimetrosAPulgadasResponse(double @return)
        {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface ConversionUnidadesChannel : ServiceReference1.ConversionUnidades, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class ConversionUnidadesClient : System.ServiceModel.ClientBase<ServiceReference1.ConversionUnidades>, ServiceReference1.ConversionUnidades
    {
        
        /// <summary>
        /// Implemente este método parcial para configurar el punto de conexión de servicio.
        /// </summary>
        /// <param name="serviceEndpoint">El punto de conexión para configurar</param>
        /// <param name="clientCredentials">Credenciales de cliente</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ConversionUnidadesClient() : 
                base(ConversionUnidadesClient.GetDefaultBinding(), ConversionUnidadesClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.ConversionUnidadesPort.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ConversionUnidadesClient(EndpointConfiguration endpointConfiguration) : 
                base(ConversionUnidadesClient.GetBindingForEndpoint(endpointConfiguration), ConversionUnidadesClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ConversionUnidadesClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ConversionUnidadesClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ConversionUnidadesClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ConversionUnidadesClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ConversionUnidadesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public ServiceReference1.pulgadasACentimetrosResponse pulgadasACentimetros(ServiceReference1.pulgadasACentimetrosRequest request)
        {
            return base.Channel.pulgadasACentimetros(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.pulgadasACentimetrosResponse> pulgadasACentimetrosAsync(ServiceReference1.pulgadasACentimetrosRequest request)
        {
            return base.Channel.pulgadasACentimetrosAsync(request);
        }
        
        public ServiceReference1.centimetrosAPulgadasResponse centimetrosAPulgadas(ServiceReference1.centimetrosAPulgadasRequest request)
        {
            return base.Channel.centimetrosAPulgadas(request);
        }
        
        public System.Threading.Tasks.Task<ServiceReference1.centimetrosAPulgadasResponse> centimetrosAPulgadasAsync(ServiceReference1.centimetrosAPulgadasRequest request)
        {
            return base.Channel.centimetrosAPulgadasAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ConversionUnidadesPort))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ConversionUnidadesPort))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8080/ConUni_Soap_Java_Monster_GR2/ConversionUnidades");
            }
            throw new System.InvalidOperationException(string.Format("No se pudo encontrar un punto de conexión con el nombre \"{0}\".", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ConversionUnidadesClient.GetBindingForEndpoint(EndpointConfiguration.ConversionUnidadesPort);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ConversionUnidadesClient.GetEndpointAddress(EndpointConfiguration.ConversionUnidadesPort);
        }
        
        public enum EndpointConfiguration
        {
            
            ConversionUnidadesPort,
        }
    }
}
